{"ast":null,"code":"var _jsxFileName = \"/home/vaseliy/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/ReactApps/todoApp1/src/components/task/task.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import { formatDistanceToNow } from 'date-fns';\n// import { Component } from 'react';\n// import Timer from '../timer/timer';\n\n// export default class Task extends Component {\n//   constructor(props) {\n//     super()\n//     this.state = {\n//       label: '',\n//       edit: false,\n//     }\n//   }\n\n//   onEdited() {\n//     this.setState({\n//       edit: true,\n//       label: this.props.label,\n//     });\n//   };\n\n//   changeLabel(event) {\n//     this.setState({\n//       label: event.target.value,\n//     });\n//   };\n\n//   onSubmitEdit(event) {\n//     event.preventDefault();\n//     const { updateEdit, id } = this.props;\n//     const text = this.state.label;\n//     updateEdit(id, text);\n//     this.setState({\n//       label: '',\n//       edit: false,\n//     });\n//   };\n\n//   render() {\n//     const { label, done, id, date, onDeleted, onCompleted } = this.props;\n//     let dateCreated = formatDistanceToNow(date, { includeSeconds: true, addSuffix: true });\n//     let liClass = '';\n//     if (done) {\n//       liClass += ' completed';\n//     }\n//     if (this.state.edit) liClass += ' editing';\n\n//     return (\n//       <li className={liClass}>\n//         <div className=\"view\">\n//           <input\n//             id={id}\n//             className=\"toggle\"\n//             type=\"checkbox\"\n//             checked={done}\n//             onChange={(event) => {\n//               onCompleted(id, event.target.checked);\n//             }}\n//           ></input>\n//           <label htmlFor={id}>\n//             <span className=\"title\">{label}</span>\n//             <span className=\"description\">\n//                 <Timer initialTime={this.props.timer} done={done}/>\n//             </span>\n//             <span className=\"description\">{dateCreated}</span>\n//           </label>\n//           <button className=\"icon icon-edit\" onClick={this.onEdited}></button>\n//           <button className=\"icon icon-destroy\" onClick={onDelItem(id)}></button>\n//         </div>\n//         <form onSubmit={this.onSubmitEdit}>\n//           <input\n//             className=\"edit\"\n//             type=\"text\"\n//             value={this.state.label}\n//             onChange={(event) => this.changeLabel(event)}\n//           ></input>\n//         </form>\n//       </li>\n//     );\n//   }\n// }\n\nconst Task = _ref => {\n  let {} = _ref;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Lol\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this)\n  // <li className={liClass}>\n  //      <div className=\"view\">\n  //        <input\n  //         id={id}\n  //         className=\"toggle\"\n  //         type=\"checkbox\"\n  //         checked={done}\n  //         onChange={(event) => {\n  //           onCompleted(id, event.target.checked);\n  //         }}\n  //       ></input>\n  //       <label htmlFor={id}>\n  //         <span className=\"title\">{label}</span>\n  //         <span className=\"description\">\n  //             <Timer initialTime={this.props.timer} done={done}/>\n  //         </span>\n  //         <span className=\"description\">{dateCreated}</span>\n  //       </label>\n  //       <button className=\"icon icon-edit\" onClick={this.onEdited}></button>\n  //       <button className=\"icon icon-destroy\" onClick={onDelItem(id)}></button>\n  //     </div>\n  //     <form onSubmit={this.onSubmitEdit}>\n  //       <input\n  //         className=\"edit\"\n  //         type=\"text\"\n  //         value={this.state.label}\n  //         onChange={(event) => this.changeLabel(event)}\n  //       ></input>\n  //     </form>\n  //   </li>\n  ;\n};\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["Task"],"sources":["/home/vaseliy/Рабочий стол/ReactApps/todoApp1/src/components/task/task.js"],"sourcesContent":["// import { formatDistanceToNow } from 'date-fns';\n// import { Component } from 'react';\n// import Timer from '../timer/timer';\n\n// export default class Task extends Component {\n//   constructor(props) {\n//     super()\n//     this.state = {\n//       label: '',\n//       edit: false,\n//     }\n//   }\n\n//   onEdited() {\n//     this.setState({\n//       edit: true,\n//       label: this.props.label,\n//     });\n//   };\n\n//   changeLabel(event) {\n//     this.setState({\n//       label: event.target.value,\n//     });\n//   };\n\n//   onSubmitEdit(event) {\n//     event.preventDefault();\n//     const { updateEdit, id } = this.props;\n//     const text = this.state.label;\n//     updateEdit(id, text);\n//     this.setState({\n//       label: '',\n//       edit: false,\n//     });\n//   };\n  \n//   render() {\n//     const { label, done, id, date, onDeleted, onCompleted } = this.props;\n//     let dateCreated = formatDistanceToNow(date, { includeSeconds: true, addSuffix: true });\n//     let liClass = '';\n//     if (done) {\n//       liClass += ' completed';\n//     }\n//     if (this.state.edit) liClass += ' editing';\n\n//     return (\n//       <li className={liClass}>\n//         <div className=\"view\">\n//           <input\n//             id={id}\n//             className=\"toggle\"\n//             type=\"checkbox\"\n//             checked={done}\n//             onChange={(event) => {\n//               onCompleted(id, event.target.checked);\n//             }}\n//           ></input>\n//           <label htmlFor={id}>\n//             <span className=\"title\">{label}</span>\n//             <span className=\"description\">\n//                 <Timer initialTime={this.props.timer} done={done}/>\n//             </span>\n//             <span className=\"description\">{dateCreated}</span>\n//           </label>\n//           <button className=\"icon icon-edit\" onClick={this.onEdited}></button>\n//           <button className=\"icon icon-destroy\" onClick={onDelItem(id)}></button>\n//         </div>\n//         <form onSubmit={this.onSubmitEdit}>\n//           <input\n//             className=\"edit\"\n//             type=\"text\"\n//             value={this.state.label}\n//             onChange={(event) => this.changeLabel(event)}\n//           ></input>\n//         </form>\n//       </li>\n//     );\n//   }\n// }\n\nconst Task = ({}) => {\n  return (\n    <p>Lol</p>\n    // <li className={liClass}>\n    //      <div className=\"view\">\n    //        <input\n    //         id={id}\n    //         className=\"toggle\"\n    //         type=\"checkbox\"\n    //         checked={done}\n    //         onChange={(event) => {\n    //           onCompleted(id, event.target.checked);\n    //         }}\n    //       ></input>\n    //       <label htmlFor={id}>\n    //         <span className=\"title\">{label}</span>\n    //         <span className=\"description\">\n    //             <Timer initialTime={this.props.timer} done={done}/>\n    //         </span>\n    //         <span className=\"description\">{dateCreated}</span>\n    //       </label>\n    //       <button className=\"icon icon-edit\" onClick={this.onEdited}></button>\n    //       <button className=\"icon icon-destroy\" onClick={onDelItem(id)}></button>\n    //     </div>\n    //     <form onSubmit={this.onSubmitEdit}>\n    //       <input\n    //         className=\"edit\"\n    //         type=\"text\"\n    //         value={this.state.label}\n    //         onChange={(event) => this.changeLabel(event)}\n    //       ></input>\n    //     </form>\n    //   </li>\n  )\n}\n\nexport default Task"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,GAAG,QAAQ;EAAA,IAAP,CAAC,CAAC;EACd,oBACE;IAAA,UAAG;EAAG;IAAA;IAAA;IAAA;EAAA;EACN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAAA,KAlCKA,IAAI;AAoCV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}