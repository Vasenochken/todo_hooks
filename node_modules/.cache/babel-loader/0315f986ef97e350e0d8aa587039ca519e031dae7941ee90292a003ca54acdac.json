{"ast":null,"code":"var _jsxFileName = \"/home/vaseliy/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/ReactApps/todoApp1/src/components/timer/timer.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Timer = _ref => {\n  _s();\n  let {\n    initialTime\n  } = _ref;\n  const [time, setTime] = useState(initialTime);\n  const [isRunning, setIsRunning] = useState(false);\n  useEffect(() => {\n    let intervalId;\n    if (isRunning && time > 0) {\n      intervalId = setInterval(() => {\n        setTime(time - 1);\n      }, 1000);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, time]);\n  const startTimer = () => {\n    setIsRunning(true);\n  };\n  const pauseTimer = () => {\n    setIsRunning(false);\n  };\n  let minutes = Math.floor(time / 60);\n  let seconds = time % 60;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"icon icon-play\",\n      onClick: startTimer,\n      disabled: isRunning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"icon icon-pause\",\n      onClick: pauseTimer,\n      disabled: !isRunning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), ` ${minutes}:${seconds}`]\n  }, void 0, true);\n};\n_s(Timer, \"96W7iGvL7aMjZ8eQqy2rMySZu7I=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useEffect","useState","Timer","initialTime","time","setTime","isRunning","setIsRunning","intervalId","setInterval","clearInterval","startTimer","pauseTimer","minutes","Math","floor","seconds"],"sources":["/home/vaseliy/Рабочий стол/ReactApps/todoApp1/src/components/timer/timer.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\n\nconst Timer = ({initialTime}) => {\n  const [time, setTime] = useState(initialTime)\n  const [isRunning, setIsRunning] = useState(false)\n\n  useEffect(() => {\n    let intervalId\n    if (isRunning && time > 0) {\n      intervalId = setInterval(() => {\n        setTime(time - 1);\n      }, 1000)\n    }\n    return () => clearInterval(intervalId)\n  }, [isRunning, time])\n\n  const startTimer = () => {\n    setIsRunning(true)\n  }\n\n  const pauseTimer = () => {\n    setIsRunning(false)\n  };\n\n  let minutes = Math.floor(time / 60);\n  let seconds = time % 60;\n\n  return (\n    <>\n      <button className=\"icon icon-play\" onClick={startTimer} disabled={isRunning}></button>\n      <button className=\"icon icon-pause\" onClick={pauseTimer} disabled={!isRunning}></button>\n      {` ${minutes}:${seconds}`}\n    </>\n  )\n}\n\nexport default Timer\n\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAE3C,MAAMC,KAAK,GAAG,QAAmB;EAAA;EAAA,IAAlB;IAACC;EAAW,CAAC;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAACE,WAAW,CAAC;EAC7C,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,IAAIQ,UAAU;IACd,IAAIF,SAAS,IAAIF,IAAI,GAAG,CAAC,EAAE;MACzBI,UAAU,GAAGC,WAAW,CAAC,MAAM;QAC7BJ,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;MACnB,CAAC,EAAE,IAAI,CAAC;IACV;IACA,OAAO,MAAMM,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,CAACF,SAAS,EAAEF,IAAI,CAAC,CAAC;EAErB,MAAMO,UAAU,GAAG,MAAM;IACvBJ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMK,UAAU,GAAG,MAAM;IACvBL,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,IAAIM,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACX,IAAI,GAAG,EAAE,CAAC;EACnC,IAAIY,OAAO,GAAGZ,IAAI,GAAG,EAAE;EAEvB,oBACE;IAAA,wBACE;MAAQ,SAAS,EAAC,gBAAgB;MAAC,OAAO,EAAEO,UAAW;MAAC,QAAQ,EAAEL;IAAU;MAAA;MAAA;MAAA;IAAA,QAAU,eACtF;MAAQ,SAAS,EAAC,iBAAiB;MAAC,OAAO,EAAEM,UAAW;MAAC,QAAQ,EAAE,CAACN;IAAU;MAAA;MAAA;MAAA;IAAA,QAAU,EACtF,IAAGO,OAAQ,IAAGG,OAAQ,EAAC;EAAA,gBACxB;AAEP,CAAC;AAAA,GAhCKd,KAAK;AAAA,KAALA,KAAK;AAkCX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}