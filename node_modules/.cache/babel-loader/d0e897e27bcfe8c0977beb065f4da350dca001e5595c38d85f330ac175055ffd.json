{"ast":null,"code":"var _jsxFileName = \"/home/vaseliy/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/ReactApps/todoApp1/src/components/timer/timer.js\",\n  _s = $RefreshSig$();\n// import React, { Component } from \"react\";\n\nimport { useEffect, useState } from \"react\";\n\n// class Timer extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       time: this.props.initialTime,\n//       isRunning: false,\n//       done: this.props.done,\n//     };\n//   }\n\n//   startTimer = () => {\n//     if (!this.state.isRunning) {\n//       this.timer = setInterval(() => {\n//         if (this.state.time > 0) {\n//           this.setState({ time: this.state.time - 1 });\n//         } else {\n//           clearInterval(this.timer);\n//           this.setState({ isRunning: false });\n//         }\n//       }, 1000);\n\n//       this.setState({ isRunning: true });\n//     }\n//   };\n\n//   pauseTimer = () => {\n//     clearInterval(this.timer);\n//     this.setState({ isRunning: false });\n//   };\n\n//   render() {\n//     const { time, isRunning } = this.state;\n\n//     const minutes = Math.floor(time / 60);\n//     const seconds = time % 60;\n\n//     return (\n//       <>\n//         <button className=\"icon icon-play\" onClick={this.startTimer} disabled={isRunning}></button>\n//         <button className=\"icon icon-pause\" onClick={this.pauseTimer} disabled={!isRunning}></button>\n//         {` ${minutes}:${seconds}`}\n//       </>\n//     )\n//   }\n// }\n\n// export default Timer;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Timer = _ref => {\n  _s();\n  let {\n    initialTime,\n    propDone\n  } = _ref;\n  const [time, setTime] = useState(initialTime);\n  const [isRunning, setIsRunning] = useState(false);\n  // const [done, setDone] = useState(propDone)\n  //   const countRef = useRef(null)\n\n  useEffect(() => {\n    let intervalId;\n    if (isRunning && time > 0) {\n      intervalId = setInterval(() => {\n        setTime(time - 1);\n      }, 1000);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, time]);\n  const startTimer = () => {\n    setIsRunning(true);\n  };\n  const pauseTimer = () => {\n    setIsRunning(false);\n  };\n  let minutes = Math.floor(time / 60);\n  let seconds = time % 60;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"icon icon-play\",\n      onClick: startTimer,\n      disabled: isRunning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"icon icon-pause\",\n      onClick: stopTimer,\n      disabled: !isRunning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), ` ${minutes}:${seconds}`]\n  }, void 0, true);\n};\n_s(Timer, \"96W7iGvL7aMjZ8eQqy2rMySZu7I=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useEffect","useState","Timer","initialTime","propDone","time","setTime","isRunning","setIsRunning","intervalId","setInterval","clearInterval","startTimer","pauseTimer","minutes","Math","floor","seconds","stopTimer"],"sources":["/home/vaseliy/Рабочий стол/ReactApps/todoApp1/src/components/timer/timer.js"],"sourcesContent":["// import React, { Component } from \"react\";\n\nimport { useEffect, useState } from \"react\"\n\n// class Timer extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       time: this.props.initialTime,\n//       isRunning: false,\n//       done: this.props.done,\n//     };\n//   }\n\n//   startTimer = () => {\n//     if (!this.state.isRunning) {\n//       this.timer = setInterval(() => {\n//         if (this.state.time > 0) {\n//           this.setState({ time: this.state.time - 1 });\n//         } else {\n//           clearInterval(this.timer);\n//           this.setState({ isRunning: false });\n//         }\n//       }, 1000);\n\n//       this.setState({ isRunning: true });\n//     }\n//   };\n\n//   pauseTimer = () => {\n//     clearInterval(this.timer);\n//     this.setState({ isRunning: false });\n//   };\n\n//   render() {\n//     const { time, isRunning } = this.state;\n\n//     const minutes = Math.floor(time / 60);\n//     const seconds = time % 60;\n\n//     return (\n//       <>\n//         <button className=\"icon icon-play\" onClick={this.startTimer} disabled={isRunning}></button>\n//         <button className=\"icon icon-pause\" onClick={this.pauseTimer} disabled={!isRunning}></button>\n//         {` ${minutes}:${seconds}`}\n//       </>\n//     )\n//   }\n// }\n\n// export default Timer;\n\nconst Timer = ({initialTime, propDone}) => {\n  const [time, setTime] = useState(initialTime)\n  const [isRunning, setIsRunning] = useState(false)\n  // const [done, setDone] = useState(propDone)\n//   const countRef = useRef(null)\n\n  useEffect(() => {\n    let intervalId;\n    if (isRunning && time > 0) {\n      intervalId = setInterval(() => {\n        setTime(time - 1);\n      }, 1000);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, time]);\n\n  const startTimer = () => {\n    setIsRunning(true)\n  }\n\n  const pauseTimer = () => {\n    setIsRunning(false);\n  };\n\n  let minutes = Math.floor(time / 60);\n  let seconds = time % 60;\n\n  return (\n    <>\n      <button className=\"icon icon-play\" onClick={startTimer} disabled={isRunning}></button>\n      <button className=\"icon icon-pause\" onClick={stopTimer} disabled={!isRunning}></button>\n      {` ${minutes}:${seconds}`}\n    </>\n  )\n}\n\nexport default Timer\n\n"],"mappings":";;AAAA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAEA,MAAMC,KAAK,GAAG,QAA6B;EAAA;EAAA,IAA5B;IAACC,WAAW;IAAEC;EAAQ,CAAC;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAACE,WAAW,CAAC;EAC7C,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD;EACF;;EAEED,SAAS,CAAC,MAAM;IACd,IAAIS,UAAU;IACd,IAAIF,SAAS,IAAIF,IAAI,GAAG,CAAC,EAAE;MACzBI,UAAU,GAAGC,WAAW,CAAC,MAAM;QAC7BJ,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;MACnB,CAAC,EAAE,IAAI,CAAC;IACV;IACA,OAAO,MAAMM,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,CAACF,SAAS,EAAEF,IAAI,CAAC,CAAC;EAErB,MAAMO,UAAU,GAAG,MAAM;IACvBJ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMK,UAAU,GAAG,MAAM;IACvBL,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,IAAIM,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACX,IAAI,GAAG,EAAE,CAAC;EACnC,IAAIY,OAAO,GAAGZ,IAAI,GAAG,EAAE;EAEvB,oBACE;IAAA,wBACE;MAAQ,SAAS,EAAC,gBAAgB;MAAC,OAAO,EAAEO,UAAW;MAAC,QAAQ,EAAEL;IAAU;MAAA;MAAA;MAAA;IAAA,QAAU,eACtF;MAAQ,SAAS,EAAC,iBAAiB;MAAC,OAAO,EAAEW,SAAU;MAAC,QAAQ,EAAE,CAACX;IAAU;MAAA;MAAA;MAAA;IAAA,QAAU,EACrF,IAAGO,OAAQ,IAAGG,OAAQ,EAAC;EAAA,gBACxB;AAEP,CAAC;AAAA,GAlCKf,KAAK;AAAA,KAALA,KAAK;AAoCX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}