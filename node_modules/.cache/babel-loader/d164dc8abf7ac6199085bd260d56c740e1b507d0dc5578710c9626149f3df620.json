{"ast":null,"code":"var _jsxFileName = \"/home/vaseliy/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/ReactApps/todoApp1/src/components/app/app.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport NewTaskForm from '../new-task-form/new-task-form.js';\nimport TaskList from '../task-list/task-list.js';\nimport Footer from '../footer/footer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todoData, setTodoData] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const generateId = () => {\n    const date = Date.now();\n    const random = Math.floor(Math.random() * 1000);\n    const newId = parseInt(`${date}${random}`);\n    return newId;\n  };\n  const onItemAdd = (text, min, sec) => {\n    const newItem = {\n      label: text,\n      done: false,\n      date: new Date(),\n      id: generateId(),\n      timer: +min * 60 + +sec\n    };\n    const newArr = [...todoData];\n    newArr.push(newItem);\n    setTodoData(newArr);\n  };\n  const deleteItem = id => {\n    const index = todoData.findIndex(el => el.id === id);\n    const newArr = [...todoData];\n    newArr.splice(index, 1);\n    setTodoData(newArr);\n  };\n  const completeItem = (id, done) => {\n    const newArr = todoData.map(el => {\n      if (el.id === id) el.done = done;\n      return el;\n    });\n    setTodoData(newArr);\n  };\n  const updateEdit = (id, text) => {\n    const index = todoData.findIndex(el => el.id === id);\n    const newArr = [...todoData];\n    newArr[index].label = text;\n    setTodoData(newArr);\n  };\n  const changeFilter = filterName => {\n    console.log(filterName);\n    setFilter(filterName);\n  };\n  const clear = () => {\n    const newArr = todoData.filter(elem => elem.done !== true);\n    setTodoData(newArr);\n  };\n  const filterItems = (todoData, filter) => {\n    switch (filter) {\n      case 'all':\n        return todoData;\n      case 'active':\n        return todoData.filter(item => !item.done);\n      case 'completed':\n        return todoData.filter(item => item.done);\n      default:\n        return todoData;\n    }\n  };\n\n  //   clear = () => {\n  //     this.setState(({ todoData }) => {\n  //       const newArr = todoData.filter((elem) => elem.done !== true);\n  //         return {\n  //           todoData: newArr,\n  //         };\n  //     });\n  //   };\n\n  //   changeFilter = (filterName) => {\n  //     this.setState({ filter: filterName });\n  //   };\n\n  //   updateEdit = (id, text) => {\n  //     this.setState(({ todoData }) => {\n  //       const index = todoData.findIndex((el) => el.id === id);\n  //       const newArr = [...todoData];\n  //       newArr[index].label = text;\n  //       return {\n  //         todoData: newArr,\n  //       };\n  //     });\n  //   };\n\n  //   completeItem = (id, value) => {\n  //     this.setState(({ todoData }) => {\n  //       const newArr = todoData.map((el) => {\n  //         if (el.id === id) el.done = value;\n  //         return el;\n  //       });\n  //       return { todoData: newArr };\n  //     });\n  //   };\n\n  return (\n    /*#__PURE__*/\n    // console.log( todoData )\n    _jsxDEV(\"section\", {\n      className: \"todoApp\",\n      children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n        onItemAdd: onItemAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          todoData: filterItems(todoData, filter),\n          deleteItem: deleteItem,\n          completeItem: completeItem,\n          updateEdit: updateEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          count: filterItems(todoData, filter).length,\n          filter: filter,\n          changeFilter: changeFilter,\n          clear: clear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(App, \"mvS/TqyQP7uXDFPPgZx71PfhVSk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","NewTaskForm","TaskList","Footer","App","todoData","setTodoData","filter","setFilter","generateId","date","Date","now","random","Math","floor","newId","parseInt","onItemAdd","text","min","sec","newItem","label","done","id","timer","newArr","push","deleteItem","index","findIndex","el","splice","completeItem","map","updateEdit","changeFilter","filterName","console","log","clear","elem","filterItems","item","length"],"sources":["/home/vaseliy/Рабочий стол/ReactApps/todoApp1/src/components/app/app.js"],"sourcesContent":["import { useState } from 'react';\n\nimport NewTaskForm from '../new-task-form/new-task-form.js';\nimport TaskList from '../task-list/task-list.js';\nimport Footer from '../footer/footer.js';\n\nconst App = () => {\n  const [todoData, setTodoData] = useState([])\n  const [filter, setFilter] = useState('all')\n\n  const generateId = () => {\n    const date = Date.now()\n    const random = Math.floor(Math.random() * 1000)\n    const newId = parseInt(`${date}${random}`)\n    return newId\n  }\n\n  const onItemAdd = (text, min, sec) => {\n    const newItem = {\n      label: text,\n      done: false,\n      date: new Date(),\n      id: generateId(),\n      timer: +min * 60 + +sec,\n    }\n    const newArr = [...todoData]\n    newArr.push(newItem)\n    setTodoData(newArr)\n  }\n\n  const deleteItem = (id) => {\n    const index = todoData.findIndex((el) => el.id === id)\n    const newArr = [...todoData]\n    newArr.splice(index, 1)\n    setTodoData(newArr)\n  }\n\n  const completeItem = (id, done) => {\n    const newArr = todoData.map((el) => {\n      if (el.id === id) el.done = done;\n      return el;\n    })\n    setTodoData(newArr)\n  }\n\n  const updateEdit = (id, text) => {\n    const index = todoData.findIndex((el) => el.id === id)\n    const newArr = [...todoData]\n    newArr[index].label = text\n    setTodoData(newArr)\n  }\n\n  const changeFilter = (filterName) => {\n    console.log(filterName)\n    setFilter(filterName)\n  }\n\n  const clear = () => {\n    const newArr = todoData.filter((elem) => elem.done !== true);\n    setTodoData(newArr)\n  }\n\n    const filterItems = (todoData, filter) => {\n    switch (filter) {\n      case 'all':\n        return todoData;\n      case 'active':\n        return todoData.filter((item) => !item.done);\n      case 'completed':\n        return todoData.filter((item) => item.done);\n      default:\n        return todoData;\n    }\n  };\n\n  //   clear = () => {\n//     this.setState(({ todoData }) => {\n//       const newArr = todoData.filter((elem) => elem.done !== true);\n//         return {\n//           todoData: newArr,\n//         };\n//     });\n//   };\n\n  //   changeFilter = (filterName) => {\n//     this.setState({ filter: filterName });\n//   };\n\n\n  //   updateEdit = (id, text) => {\n//     this.setState(({ todoData }) => {\n//       const index = todoData.findIndex((el) => el.id === id);\n//       const newArr = [...todoData];\n//       newArr[index].label = text;\n//       return {\n//         todoData: newArr,\n//       };\n//     });\n//   };\n\n  //   completeItem = (id, value) => {\n//     this.setState(({ todoData }) => {\n//       const newArr = todoData.map((el) => {\n//         if (el.id === id) el.done = value;\n//         return el;\n//       });\n//       return { todoData: newArr };\n//     });\n//   };\n\n  return (\n    // console.log( todoData )\n    <section className=\"todoApp\">\n          <NewTaskForm onItemAdd={onItemAdd} />\n          <section className=\"main\">\n            <TaskList\n              todoData={filterItems(todoData, filter)}\n              deleteItem={deleteItem}\n              completeItem={completeItem}\n              updateEdit={updateEdit}\n            />\n            <Footer\n              count={filterItems(todoData, filter).length}\n              filter={filter}\n              changeFilter={changeFilter}\n              clear={clear}\n            />\n          </section>\n        </section>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}