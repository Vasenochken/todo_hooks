{"ast":null,"code":"var _jsxFileName = \"/home/vaseliy/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/ReactApps/todoApp1/src/components/app/app.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport NewTaskForm from '../new-task-form/new-task-form.js';\nimport TaskList from '../task-list/task-list.js';\nimport Footer from '../footer/footer.js';\n\n// import './app.css';\n\n// export default class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       todoData: [],\n//       filter: 'all',\n//     };\n//     this.maxId = 100\n//   }\n\n//   onItemAdd = (text,min,sec) => {\n//     const newItem = {\n//       label: text,\n//       done: false,\n//       date: new Date(),\n//       id: this.maxId++,\n//       timer: +min * 60 + +sec,\n//     };\n//     this.setState(({ todoData }) => {\n//       const newArr = [...todoData];\n//       newArr.push(newItem);\n//       return {\n//         todoData: newArr,\n//       };\n//     });\n//   };\n\n//   completeItem = (id, value) => {\n//     this.setState(({ todoData }) => {\n//       const newArr = todoData.map((el) => {\n//         if (el.id === id) el.done = value;\n//         return el;\n//       });\n//       return { todoData: newArr };\n//     });\n//   };\n\n//   updateEdit = (id, text) => {\n//     this.setState(({ todoData }) => {\n//       const index = todoData.findIndex((el) => el.id === id);\n//       const newArr = [...todoData];\n//       newArr[index].label = text;\n//       return {\n//         todoData: newArr,\n//       };\n//     });\n//   };\n\n//   deleteItem = (id) => {\n//     this.setState(({ todoData }) => {\n//       const index = todoData.findIndex((el) => el.id === id);\n//       const newArr = [...todoData];\n//       newArr.splice(index, 1);\n//       return {\n//         todoData: newArr,\n//       };\n//     });\n//   };\n\n//   changeFilter = (filterName) => {\n//     this.setState({ filter: filterName });\n//   };\n\n//   filterItems = (todoData, filter) => {\n//     switch (filter) {\n//       case 'all':\n//         return todoData;\n//       case 'active':\n//         return todoData.filter((item) => !item.done);\n//       case 'completed':\n//         return todoData.filter((item) => item.done);\n//       default:\n//         return todoData;\n//     }\n//   };\n\n//   clear = () => {\n//     this.setState(({ todoData }) => {\n//       const newArr = todoData.filter((elem) => elem.done !== true);\n//         return {\n//           todoData: newArr,\n//         };\n//     });\n//   };\n\n//   render() {\n//     return (\n//         <section className=\"todoApp\">\n//           <NewTaskForm onItemAdd={this.onItemAdd} />\n//           <section className=\"main\">\n//             <TaskList\n//               todoData={this.filterItems(this.state.todoData, this.state.filter)}\n//               onDeleted={(id) => this.deleteItem(id)}\n//               onCompleted={this.completeItem}\n//               updateEdit={this.updateEdit}\n//             />\n//             <Footer\n//               count={this.filterItems(this.state.todoData, this.state.filter).length}\n//               filter={this.state.filter}\n//               changeFilter={this.changeFilter}\n//               onClear={() => this.clear(this.state.todoData)}\n//             />\n//           </section>\n//         </section>\n//     );\n//   }\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todoData, setTodoData] = useState([]);\n  const [filter, setFilter] = useState('all');\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"todoApp\",\n    children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n      onItemAdd: this.onItemAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(TaskList, {\n        todoData: this.filterItems(this.state.todoData, this.state.filter),\n        onDeleted: id => this.deleteItem(id),\n        onCompleted: this.completeItem,\n        updateEdit: this.updateEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        count: this.filterItems(this.state.todoData, this.state.filter).length,\n        filter: this.state.filter,\n        changeFilter: this.changeFilter,\n        onClear: () => this.clear(this.state.todoData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mvS/TqyQP7uXDFPPgZx71PfhVSk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","NewTaskForm","TaskList","Footer","App","todoData","setTodoData","filter","setFilter","onItemAdd","filterItems","state","id","deleteItem","completeItem","updateEdit","length","changeFilter","clear"],"sources":["/home/vaseliy/Рабочий стол/ReactApps/todoApp1/src/components/app/app.js"],"sourcesContent":["import { useState } from 'react';\n\nimport NewTaskForm from '../new-task-form/new-task-form.js';\nimport TaskList from '../task-list/task-list.js';\nimport Footer from '../footer/footer.js';\n\n// import './app.css';\n\n// export default class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       todoData: [],\n//       filter: 'all',\n//     };\n//     this.maxId = 100\n//   }\n\n//   onItemAdd = (text,min,sec) => {\n//     const newItem = {\n//       label: text,\n//       done: false,\n//       date: new Date(),\n//       id: this.maxId++,\n//       timer: +min * 60 + +sec,\n//     };\n//     this.setState(({ todoData }) => {\n//       const newArr = [...todoData];\n//       newArr.push(newItem);\n//       return {\n//         todoData: newArr,\n//       };\n//     });\n//   };\n\n//   completeItem = (id, value) => {\n//     this.setState(({ todoData }) => {\n//       const newArr = todoData.map((el) => {\n//         if (el.id === id) el.done = value;\n//         return el;\n//       });\n//       return { todoData: newArr };\n//     });\n//   };\n\n//   updateEdit = (id, text) => {\n//     this.setState(({ todoData }) => {\n//       const index = todoData.findIndex((el) => el.id === id);\n//       const newArr = [...todoData];\n//       newArr[index].label = text;\n//       return {\n//         todoData: newArr,\n//       };\n//     });\n//   };\n\n//   deleteItem = (id) => {\n//     this.setState(({ todoData }) => {\n//       const index = todoData.findIndex((el) => el.id === id);\n//       const newArr = [...todoData];\n//       newArr.splice(index, 1);\n//       return {\n//         todoData: newArr,\n//       };\n//     });\n//   };\n\n//   changeFilter = (filterName) => {\n//     this.setState({ filter: filterName });\n//   };\n\n//   filterItems = (todoData, filter) => {\n//     switch (filter) {\n//       case 'all':\n//         return todoData;\n//       case 'active':\n//         return todoData.filter((item) => !item.done);\n//       case 'completed':\n//         return todoData.filter((item) => item.done);\n//       default:\n//         return todoData;\n//     }\n//   };\n\n//   clear = () => {\n//     this.setState(({ todoData }) => {\n//       const newArr = todoData.filter((elem) => elem.done !== true);\n//         return {\n//           todoData: newArr,\n//         };\n//     });\n//   };\n\n//   render() {\n//     return (\n//         <section className=\"todoApp\">\n//           <NewTaskForm onItemAdd={this.onItemAdd} />\n//           <section className=\"main\">\n//             <TaskList\n//               todoData={this.filterItems(this.state.todoData, this.state.filter)}\n//               onDeleted={(id) => this.deleteItem(id)}\n//               onCompleted={this.completeItem}\n//               updateEdit={this.updateEdit}\n//             />\n//             <Footer\n//               count={this.filterItems(this.state.todoData, this.state.filter).length}\n//               filter={this.state.filter}\n//               changeFilter={this.changeFilter}\n//               onClear={() => this.clear(this.state.todoData)}\n//             />\n//           </section>\n//         </section>\n//     );\n//   }\n// }\n\nconst App = () => {\n  const [todoData, setTodoData] = useState([])\n  const [filter, setFilter] = useState('all') \n  return (\n    <section className=\"todoApp\">\n          <NewTaskForm onItemAdd={this.onItemAdd} />\n          <section className=\"main\">\n            <TaskList\n              todoData={this.filterItems(this.state.todoData, this.state.filter)}\n              onDeleted={(id) => this.deleteItem(id)}\n              onCompleted={this.completeItem}\n              updateEdit={this.updateEdit}\n            />\n            <Footer\n              count={this.filterItems(this.state.todoData, this.state.filter).length}\n              filter={this.state.filter}\n              changeFilter={this.changeFilter}\n              onClear={() => this.clear(this.state.todoData)}\n            />\n          </section>\n        </section>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,WAAW,MAAM,mCAAmC;AAC3D,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,MAAM,MAAM,qBAAqB;;AAExhB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC3C,oBACE;IAAS,SAAS,EAAC,SAAS;IAAA,wBACtB,QAAC,WAAW;MAAC,SAAS,EAAE,IAAI,CAACS;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1C;MAAS,SAAS,EAAC,MAAM;MAAA,wBACvB,QAAC,QAAQ;QACP,QAAQ,EAAE,IAAI,CAACC,WAAW,CAAC,IAAI,CAACC,KAAK,CAACN,QAAQ,EAAE,IAAI,CAACM,KAAK,CAACJ,MAAM,CAAE;QACnE,SAAS,EAAGK,EAAE,IAAK,IAAI,CAACC,UAAU,CAACD,EAAE,CAAE;QACvC,WAAW,EAAE,IAAI,CAACE,YAAa;QAC/B,UAAU,EAAE,IAAI,CAACC;MAAW;QAAA;QAAA;QAAA;MAAA,QAC5B,eACF,QAAC,MAAM;QACL,KAAK,EAAE,IAAI,CAACL,WAAW,CAAC,IAAI,CAACC,KAAK,CAACN,QAAQ,EAAE,IAAI,CAACM,KAAK,CAACJ,MAAM,CAAC,CAACS,MAAO;QACvE,MAAM,EAAE,IAAI,CAACL,KAAK,CAACJ,MAAO;QAC1B,YAAY,EAAE,IAAI,CAACU,YAAa;QAChC,OAAO,EAAE,MAAM,IAAI,CAACC,KAAK,CAAC,IAAI,CAACP,KAAK,CAACN,QAAQ;MAAE;QAAA;QAAA;QAAA;MAAA,QAC/C;IAAA;MAAA;MAAA;MAAA;IAAA,QACM;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAElB,CAAC;AAAA,GAtBKD,GAAG;AAAA,KAAHA,GAAG;AAwBT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}