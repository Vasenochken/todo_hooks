{"ast":null,"code":"var _jsxFileName = \"/home/vaseliy/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/ReactApps/todoApp1/src/components/task/task.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import { formatDistanceToNow } from 'date-fns';\n// import { Component } from 'react';\n// import Timer from '../timer/timer';\n\n// export default class Task extends Component {\n//   constructor(props) {\n//     super()\n//     this.state = {\n//       label: '',\n//       edit: false,\n//     }\n//   }\n\n//   onEdited() {\n//     this.setState({\n//       edit: true,\n//       label: this.props.label,\n//     });\n//   };\n\n//   changeLabel(event) {\n//     this.setState({\n//       label: event.target.value,\n//     });\n//   };\n\n//   onSubmitEdit(event) {\n//     event.preventDefault();\n//     const { updateEdit, id } = this.props;\n//     const text = this.state.label;\n//     updateEdit(id, text);\n//     this.setState({\n//       label: '',\n//       edit: false,\n//     });\n//   };\n\n//   render() {\n//     const { label, done, id, date, onDeleted, onCompleted } = this.props;\n//     let dateCreated = formatDistanceToNow(date, { includeSeconds: true, addSuffix: true });\n//     let liClass = '';\n//     if (done) {\n//       liClass += ' completed';\n//     }\n//     if (this.state.edit) liClass += ' editing';\n\n//     return (\n//       <li className={liClass}>\n//         <div className=\"view\">\n//           <input\n//             id={id}\n//             className=\"toggle\"\n//             type=\"checkbox\"\n//             checked={done}\n//             onChange={(event) => {\n//               onCompleted(id, event.target.checked);\n//             }}\n//           ></input>\n//           <label htmlFor={id}>\n//             <span className=\"title\">{label}</span>\n//             <span className=\"description\">\n//                 <Timer initialTime={this.props.timer} done={done}/>\n//             </span>\n//             <span className=\"description\">{dateCreated}</span>\n//           </label>\n//           <button className=\"icon icon-edit\" onClick={this.onEdited}></button>\n//           <button className=\"icon icon-destroy\" onClick={onDelItem(id)}></button>\n//         </div>\n//         <form onSubmit={this.onSubmitEdit}>\n//           <input\n//             className=\"edit\"\n//             type=\"text\"\n//             value={this.state.label}\n//             onChange={(event) => this.changeLabel(event)}\n//           ></input>\n//         </form>\n//       </li>\n//     );\n//   }\n// }\n\nconst Task = _ref => {\n  let {\n    id,\n    label,\n    done,\n    date,\n    deleteItem\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: liClass,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: id,\n        className: \"toggle\",\n        type: \"checkbox\",\n        checked: done,\n        onChange: event => {\n          onCompleted(id, event.target.checked);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: id,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"description\",\n          children: /*#__PURE__*/_jsxDEV(Timer, {\n            initialTime: this.props.timer,\n            done: done\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"description\",\n          children: dateCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon icon-edit\",\n        onClick: this.onEdited\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon icon-destroy\",\n        onClick: onDelItem(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmitEdit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit\",\n        type: \"text\",\n        value: this.state.label,\n        onChange: event => this.changeLabel(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["Task","id","label","done","date","deleteItem","liClass","event","onCompleted","target","checked","props","timer","dateCreated","onEdited","onDelItem","onSubmitEdit","state","changeLabel"],"sources":["/home/vaseliy/Рабочий стол/ReactApps/todoApp1/src/components/task/task.js"],"sourcesContent":["// import { formatDistanceToNow } from 'date-fns';\n// import { Component } from 'react';\n// import Timer from '../timer/timer';\n\n// export default class Task extends Component {\n//   constructor(props) {\n//     super()\n//     this.state = {\n//       label: '',\n//       edit: false,\n//     }\n//   }\n\n//   onEdited() {\n//     this.setState({\n//       edit: true,\n//       label: this.props.label,\n//     });\n//   };\n\n//   changeLabel(event) {\n//     this.setState({\n//       label: event.target.value,\n//     });\n//   };\n\n//   onSubmitEdit(event) {\n//     event.preventDefault();\n//     const { updateEdit, id } = this.props;\n//     const text = this.state.label;\n//     updateEdit(id, text);\n//     this.setState({\n//       label: '',\n//       edit: false,\n//     });\n//   };\n  \n//   render() {\n//     const { label, done, id, date, onDeleted, onCompleted } = this.props;\n//     let dateCreated = formatDistanceToNow(date, { includeSeconds: true, addSuffix: true });\n//     let liClass = '';\n//     if (done) {\n//       liClass += ' completed';\n//     }\n//     if (this.state.edit) liClass += ' editing';\n\n//     return (\n//       <li className={liClass}>\n//         <div className=\"view\">\n//           <input\n//             id={id}\n//             className=\"toggle\"\n//             type=\"checkbox\"\n//             checked={done}\n//             onChange={(event) => {\n//               onCompleted(id, event.target.checked);\n//             }}\n//           ></input>\n//           <label htmlFor={id}>\n//             <span className=\"title\">{label}</span>\n//             <span className=\"description\">\n//                 <Timer initialTime={this.props.timer} done={done}/>\n//             </span>\n//             <span className=\"description\">{dateCreated}</span>\n//           </label>\n//           <button className=\"icon icon-edit\" onClick={this.onEdited}></button>\n//           <button className=\"icon icon-destroy\" onClick={onDelItem(id)}></button>\n//         </div>\n//         <form onSubmit={this.onSubmitEdit}>\n//           <input\n//             className=\"edit\"\n//             type=\"text\"\n//             value={this.state.label}\n//             onChange={(event) => this.changeLabel(event)}\n//           ></input>\n//         </form>\n//       </li>\n//     );\n//   }\n// }\n\nconst Task = ({id, label, done, date, deleteItem}) => {\n  return (\n    <li className={liClass}>\n      \n          <div className=\"view\">\n            <input\n             id={id}\n             className=\"toggle\"\n             type=\"checkbox\"\n             checked={done}\n             onChange={(event) => {\n               onCompleted(id, event.target.checked);\n             }}\n           ></input>\n           <label htmlFor={id}>\n             <span className=\"title\">{label}</span>\n            <span className=\"description\">\n                 <Timer initialTime={this.props.timer} done={done}/>\n             </span>\n             <span className=\"description\">{dateCreated}</span>\n           </label>\n           <button className=\"icon icon-edit\" onClick={this.onEdited}></button>\n           <button className=\"icon icon-destroy\" onClick={onDelItem(id)}></button>\n         </div>\n         <form onSubmit={this.onSubmitEdit}>\n           <input\n             className=\"edit\"\n             type=\"text\"\n             value={this.state.label}\n             onChange={(event) => this.changeLabel(event)}\n           ></input>\n         </form>\n       </li>\n  )\n}\n\nexport default Task"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,GAAG,QAAyC;EAAA,IAAxC;IAACC,EAAE;IAAEC,KAAK;IAAEC,IAAI;IAAEC,IAAI;IAAEC;EAAU,CAAC;EAC/C,oBACE;IAAI,SAAS,EAAEC,OAAQ;IAAA,wBAEjB;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QACC,EAAE,EAAEL,EAAG;QACP,SAAS,EAAC,QAAQ;QAClB,IAAI,EAAC,UAAU;QACf,OAAO,EAAEE,IAAK;QACd,QAAQ,EAAGI,KAAK,IAAK;UACnBC,WAAW,CAACP,EAAE,EAAEM,KAAK,CAACE,MAAM,CAACC,OAAO,CAAC;QACvC;MAAE;QAAA;QAAA;QAAA;MAAA,QACK,eACT;QAAO,OAAO,EAAET,EAAG;QAAA,wBACjB;UAAM,SAAS,EAAC,OAAO;UAAA,UAAEC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,eACvC;UAAM,SAAS,EAAC,aAAa;UAAA,uBACxB,QAAC,KAAK;YAAC,WAAW,EAAE,IAAI,CAACS,KAAK,CAACC,KAAM;YAAC,IAAI,EAAET;UAAK;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QAChD,eACP;UAAM,SAAS,EAAC,aAAa;UAAA,UAAEU;QAAW;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5C,eACR;QAAQ,SAAS,EAAC,gBAAgB;QAAC,OAAO,EAAE,IAAI,CAACC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAU,eACpE;QAAQ,SAAS,EAAC,mBAAmB;QAAC,OAAO,EAAEC,SAAS,CAACd,EAAE;MAAE;QAAA;QAAA;QAAA;MAAA,QAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QACnE,eACN;MAAM,QAAQ,EAAE,IAAI,CAACe,YAAa;MAAA,uBAChC;QACE,SAAS,EAAC,MAAM;QAChB,IAAI,EAAC,MAAM;QACX,KAAK,EAAE,IAAI,CAACC,KAAK,CAACf,KAAM;QACxB,QAAQ,EAAGK,KAAK,IAAK,IAAI,CAACW,WAAW,CAACX,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA;IACtC;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEZ,CAAC;AAAA,KAlCKP,IAAI;AAoCV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}