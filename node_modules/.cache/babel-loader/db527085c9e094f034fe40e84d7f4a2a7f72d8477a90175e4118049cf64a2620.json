{"ast":null,"code":"var _jsxFileName = \"/home/vaseliy/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/ReactApps/todoApp1/src/components/task/task.js\",\n  _s = $RefreshSig$();\nimport { formatDistanceToNow } from 'date-fns';\nimport { useState } from 'react';\n// import { Component } from 'react';\n// import Timer from '../timer/timer';\n\n// export default class Task extends Component {\n//   constructor(props) {\n//     super()\n//     this.state = {\n//       label: '',\n//       edit: false,\n//     }\n//   }\n\n//   onEdited() {\n//     this.setState({\n//       edit: true,\n//       label: this.props.label,\n//     });\n//   };\n\n//   changeLabel(event) {\n//     this.setState({\n//       label: event.target.value,\n//     });\n//   };\n\n//   onSubmitEdit(event) {\n//     event.preventDefault();\n//     const { updateEdit, id } = this.props;\n//     const text = this.state.label;\n//     updateEdit(id, text);\n//     this.setState({\n//       label: '',\n//       edit: false,\n//     });\n//   };\n\n//   render() {\n//     const { label, done, id, date, onDeleted, onCompleted } = this.props;\n//     let dateCreated = formatDistanceToNow(date, { includeSeconds: true, addSuffix: true });\n//     let liClass = '';\n//     if (done) {\n//       liClass += ' completed';\n//     }\n//     if (this.state.edit) liClass += ' editing';\n\n//     return (\n//       <li className={liClass}>\n//         <div className=\"view\">\n//           <input\n//             id={id}\n//             className=\"toggle\"\n//             type=\"checkbox\"\n//             checked={done}\n//             onChange={(event) => {\n//               onCompleted(id, event.target.checked);\n//             }}\n//           ></input>\n//           <label htmlFor={id}>\n//             <span className=\"title\">{label}</span>\n//             <span className=\"description\">\n//                 <Timer initialTime={this.props.timer} done={done}/>\n//             </span>\n//             <span className=\"description\">{dateCreated}</span>\n//           </label>\n//           <button className=\"icon icon-edit\" onClick={this.onEdited}></button>\n//           <button className=\"icon icon-destroy\" onClick={onDelItem(id)}></button>\n//         </div>\n//         <form onSubmit={this.onSubmitEdit}>\n//           <input\n//             className=\"edit\"\n//             type=\"text\"\n//             value={this.state.label}\n//             onChange={(event) => this.changeLabel(event)}\n//           ></input>\n//         </form>\n//       </li>\n//     );\n//   }\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = _ref => {\n  _s();\n  let {\n    id,\n    label,\n    done,\n    date,\n    deleteItem\n  } = _ref;\n  const [value, setValue] = useState(label);\n  const dateCreated = formatDistanceToNow(date, {\n    includeSeconds: true,\n    addSuffix: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: liClass,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: id,\n        className: \"toggle\",\n        type: \"checkbox\",\n        checked: done\n        //  onChange={(event) => {\n        //    onCompleted(id, event.target.checked);\n        //  }}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: id,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"description\",\n          children: dateCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon icon-destroy\",\n        onClick: deleteItem(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Task, \"1++HSaRQ7mgu3+QU/S1v1VZCBoQ=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["formatDistanceToNow","useState","Task","id","label","done","date","deleteItem","value","setValue","dateCreated","includeSeconds","addSuffix","liClass"],"sources":["/home/vaseliy/Рабочий стол/ReactApps/todoApp1/src/components/task/task.js"],"sourcesContent":["import { formatDistanceToNow } from 'date-fns';\nimport { useState } from 'react';\n// import { Component } from 'react';\n// import Timer from '../timer/timer';\n\n// export default class Task extends Component {\n//   constructor(props) {\n//     super()\n//     this.state = {\n//       label: '',\n//       edit: false,\n//     }\n//   }\n\n//   onEdited() {\n//     this.setState({\n//       edit: true,\n//       label: this.props.label,\n//     });\n//   };\n\n//   changeLabel(event) {\n//     this.setState({\n//       label: event.target.value,\n//     });\n//   };\n\n//   onSubmitEdit(event) {\n//     event.preventDefault();\n//     const { updateEdit, id } = this.props;\n//     const text = this.state.label;\n//     updateEdit(id, text);\n//     this.setState({\n//       label: '',\n//       edit: false,\n//     });\n//   };\n  \n//   render() {\n//     const { label, done, id, date, onDeleted, onCompleted } = this.props;\n//     let dateCreated = formatDistanceToNow(date, { includeSeconds: true, addSuffix: true });\n//     let liClass = '';\n//     if (done) {\n//       liClass += ' completed';\n//     }\n//     if (this.state.edit) liClass += ' editing';\n\n//     return (\n//       <li className={liClass}>\n//         <div className=\"view\">\n//           <input\n//             id={id}\n//             className=\"toggle\"\n//             type=\"checkbox\"\n//             checked={done}\n//             onChange={(event) => {\n//               onCompleted(id, event.target.checked);\n//             }}\n//           ></input>\n//           <label htmlFor={id}>\n//             <span className=\"title\">{label}</span>\n//             <span className=\"description\">\n//                 <Timer initialTime={this.props.timer} done={done}/>\n//             </span>\n//             <span className=\"description\">{dateCreated}</span>\n//           </label>\n//           <button className=\"icon icon-edit\" onClick={this.onEdited}></button>\n//           <button className=\"icon icon-destroy\" onClick={onDelItem(id)}></button>\n//         </div>\n//         <form onSubmit={this.onSubmitEdit}>\n//           <input\n//             className=\"edit\"\n//             type=\"text\"\n//             value={this.state.label}\n//             onChange={(event) => this.changeLabel(event)}\n//           ></input>\n//         </form>\n//       </li>\n//     );\n//   }\n// }\n\nconst Task = ({id, label, done, date, deleteItem}) => {\n  const [value, setValue] = useState(label)\n  const dateCreated = formatDistanceToNow(date, { includeSeconds: true, addSuffix: true })\n  return (\n    <li className={liClass}>      \n          <div className=\"view\">\n            <input\n             id={id}\n             className=\"toggle\"\n             type=\"checkbox\"\n             checked={done}\n            //  onChange={(event) => {\n            //    onCompleted(id, event.target.checked);\n            //  }}\n           ></input>\n           <label htmlFor={id}>\n             <span className=\"title\">{label}</span>\n            <span className=\"description\">\n                 {/* <Timer initialTime={this.props.timer} done={done}/> */}\n             </span>\n             <span className=\"description\">{dateCreated}</span>\n           </label>\n           {/* <button className=\"icon icon-edit\" onClick={this.onEdited}></button> */}\n           <button className=\"icon icon-destroy\" onClick={deleteItem(id)}></button>\n         </div>\n         {/* <form onSubmit={this.onSubmitEdit}>\n           <input\n             className=\"edit\"\n             type=\"text\"\n             value={this.state.label}\n             onChange={(event) => this.changeLabel(event)}\n           ></input>\n         </form> */}\n       </li>\n  )\n}\n\nexport default Task"],"mappings":";;AAAA,SAASA,mBAAmB,QAAQ,UAAU;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,MAAMC,IAAI,GAAG,QAAyC;EAAA;EAAA,IAAxC;IAACC,EAAE;IAAEC,KAAK;IAAEC,IAAI;IAAEC,IAAI;IAAEC;EAAU,CAAC;EAC/C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACG,KAAK,CAAC;EACzC,MAAMM,WAAW,GAAGV,mBAAmB,CAACM,IAAI,EAAE;IAAEK,cAAc,EAAE,IAAI;IAAEC,SAAS,EAAE;EAAK,CAAC,CAAC;EACxF,oBACE;IAAI,SAAS,EAAEC,OAAQ;IAAA,uBACjB;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QACC,EAAE,EAAEV,EAAG;QACP,SAAS,EAAC,QAAQ;QAClB,IAAI,EAAC,UAAU;QACf,OAAO,EAAEE;QACV;QACA;QACA;MAAA;QAAA;QAAA;QAAA;MAAA,QACQ,eACT;QAAO,OAAO,EAAEF,EAAG;QAAA,wBACjB;UAAM,SAAS,EAAC,OAAO;UAAA,UAAEC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,eACvC;UAAM,SAAS,EAAC;QAAa;UAAA;UAAA;UAAA;QAAA,QAErB,eACP;UAAM,SAAS,EAAC,aAAa;UAAA,UAAEM;QAAW;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5C,eAER;QAAQ,SAAS,EAAC,mBAAmB;QAAC,OAAO,EAAEH,UAAU,CAACJ,EAAE;MAAE;QAAA;QAAA;QAAA;MAAA,QAAU;IAAA;MAAA;MAAA;MAAA;IAAA;EACpE;IAAA;IAAA;IAAA;EAAA,QASH;AAEZ,CAAC;AAAA,GAnCKD,IAAI;AAAA,KAAJA,IAAI;AAqCV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}