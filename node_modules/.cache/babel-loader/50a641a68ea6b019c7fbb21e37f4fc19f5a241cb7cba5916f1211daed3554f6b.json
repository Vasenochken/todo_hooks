{"ast":null,"code":"var _jsxFileName = \"/home/vaseliy/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/todoApp1/src/components/timer/timer.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CountdownTimer extends Component {\n  constructor(props) {\n    super(props);\n    this.tick = () => {\n      const timeRemaining = this.state.timeRemaining - 1;\n      if (timeRemaining >= 0) {\n        this.setState({\n          timeRemaining: timeRemaining\n        });\n      } else {\n        clearInterval(this.state.intervalId);\n        this.props.onTimerEnd();\n      }\n    };\n    this.state = {\n      timeRemaining: this.props.seconds,\n      intervalId: null\n    };\n  }\n  componentDidMount() {\n    const intervalId = setInterval(this.tick, 1000);\n    this.setState({\n      intervalId: intervalId\n    });\n  }\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n  render() {\n    const minutes = Math.floor(this.state.timeRemaining / 60);\n    const seconds = this.state.timeRemaining % 60;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [minutes, \":\", seconds < 10 ? `0${seconds}` : seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default CountdownTimer;","map":{"version":3,"names":["React","Component","CountdownTimer","constructor","props","tick","timeRemaining","state","setState","clearInterval","intervalId","onTimerEnd","seconds","componentDidMount","setInterval","componentWillUnmount","render","minutes","Math","floor"],"sources":["/home/vaseliy/Рабочий стол/todoApp1/src/components/timer/timer.js"],"sourcesContent":["import React, { Component } from 'react';\n\nclass CountdownTimer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timeRemaining: this.props.seconds,\n      intervalId: null\n    };\n  }\n\n  componentDidMount() {\n    const intervalId = setInterval(this.tick, 1000);\n    this.setState({ intervalId: intervalId });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  tick = () => {\n    const timeRemaining = this.state.timeRemaining - 1;\n    if (timeRemaining >= 0) {\n      this.setState({ timeRemaining: timeRemaining });\n    } else {\n      clearInterval(this.state.intervalId);\n      this.props.onTimerEnd();\n    }\n  };\n\n  render() {\n    const minutes = Math.floor(this.state.timeRemaining / 60);\n    const seconds = this.state.timeRemaining % 60;\n\n    return (\n      <div>\n        {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n      </div>\n    );\n  }\n}\n\nexport default CountdownTimer;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC;AAEzC,MAAMC,cAAc,SAASD,SAAS,CAAC;EACrCE,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAiBfC,IAAI,GAAG,MAAM;MACX,MAAMC,aAAa,GAAG,IAAI,CAACC,KAAK,CAACD,aAAa,GAAG,CAAC;MAClD,IAAIA,aAAa,IAAI,CAAC,EAAE;QACtB,IAAI,CAACE,QAAQ,CAAC;UAAEF,aAAa,EAAEA;QAAc,CAAC,CAAC;MACjD,CAAC,MAAM;QACLG,aAAa,CAAC,IAAI,CAACF,KAAK,CAACG,UAAU,CAAC;QACpC,IAAI,CAACN,KAAK,CAACO,UAAU,EAAE;MACzB;IACF,CAAC;IAvBC,IAAI,CAACJ,KAAK,GAAG;MACXD,aAAa,EAAE,IAAI,CAACF,KAAK,CAACQ,OAAO;MACjCF,UAAU,EAAE;IACd,CAAC;EACH;EAEAG,iBAAiB,GAAG;IAClB,MAAMH,UAAU,GAAGI,WAAW,CAAC,IAAI,CAACT,IAAI,EAAE,IAAI,CAAC;IAC/C,IAAI,CAACG,QAAQ,CAAC;MAAEE,UAAU,EAAEA;IAAW,CAAC,CAAC;EAC3C;EAEAK,oBAAoB,GAAG;IACrBN,aAAa,CAAC,IAAI,CAACF,KAAK,CAACG,UAAU,CAAC;EACtC;EAYAM,MAAM,GAAG;IACP,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACZ,KAAK,CAACD,aAAa,GAAG,EAAE,CAAC;IACzD,MAAMM,OAAO,GAAG,IAAI,CAACL,KAAK,CAACD,aAAa,GAAG,EAAE;IAE7C,oBACE;MAAA,WACGW,OAAO,EAAC,GAAC,EAACL,OAAO,GAAG,EAAE,GAAI,IAAGA,OAAQ,EAAC,GAAGA,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7C;EAEV;AACF;AAEA,eAAeV,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}