{"ast":null,"code":"var _jsxFileName = \"/home/vaseliy/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/ReactApps/todoApp1/src/components/task/task.js\",\n  _s = $RefreshSig$();\nimport { eachDayOfInterval, formatDistanceToNow } from 'date-fns';\nimport { useState } from 'react';\n// import { Component } from 'react';\n// import Timer from '../timer/timer';\n\n// export default class Task extends Component {\n//   constructor(props) {\n//     super()\n//     this.state = {\n//       label: '',\n//       edit: false,\n//     }\n//   }\n\n//   onEdited() {\n//     this.setState({\n//       edit: true,\n//       label: this.props.label,\n//     });\n//   };\n\n//   changeLabel(event) {\n//     this.setState({\n//       label: event.target.value,\n//     });\n//   };\n\n//   onSubmitEdit(event) {\n//     event.preventDefault();\n//     const { updateEdit, id } = this.props;\n//     const text = this.state.label;\n//     updateEdit(id, text);\n//     this.setState({\n//       label: '',\n//       edit: false,\n//     });\n//   };\n\n//   render() {\n//     const { label, done, id, date, onDeleted, onCompleted } = this.props;\n//     let dateCreated = formatDistanceToNow(date, { includeSeconds: true, addSuffix: true });\n//     let liClass = '';\n//     if (done) {\n//       liClass += ' completed';\n//     }\n//     if (this.state.edit) liClass += ' editing';\n\n//     return (\n//       <li className={liClass}>\n//         <div className=\"view\">\n//           <input\n//             id={id}\n//             className=\"toggle\"\n//             type=\"checkbox\"\n//             checked={done}\n//             onChange={(event) => {\n//               onCompleted(id, event.target.checked);\n//             }}\n//           ></input>\n//           <label htmlFor={id}>\n//             <span className=\"title\">{label}</span>\n//             <span className=\"description\">\n//                 <Timer initialTime={this.props.timer} done={done}/>\n//             </span>\n//             <span className=\"description\">{dateCreated}</span>\n//           </label>\n//           <button className=\"icon icon-edit\" onClick={this.onEdited}></button>\n//           <button className=\"icon icon-destroy\" onClick={onDelItem(id)}></button>\n//         </div>\n//         <form onSubmit={this.onSubmitEdit}>\n//           <input\n//             className=\"edit\"\n//             type=\"text\"\n//             value={this.state.label}\n//             onChange={(event) => this.changeLabel(event)}\n//           ></input>\n//         </form>\n//       </li>\n//     );\n//   }\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = _ref => {\n  _s();\n  let {\n    id,\n    label,\n    done,\n    deleteItem,\n    completeItem,\n    upDateEdit\n  } = _ref;\n  const [value, setValue] = useState('');\n  const [edit, setEdit] = useState(false);\n  const onEdit = () => {\n    console.log(label);\n    setValue(label);\n    setEdit(true);\n  };\n\n  // const onSubmitEdit = (e) => {\n  //   e.prevent.default()\n  //   upDateEdit(id, value)\n  //   setValue('')\n  //   setEdit(false)\n  // }\n\n  const dateCreated = formatDistanceToNow(new Date(), {\n    includeSeconds: true,\n    addSuffix: true\n  });\n  let liClass = ' ';\n  if (done) liClass += ' completed';\n  if (edit) liClass += ' editing';\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: liClass,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: id,\n        className: \"toggle\",\n        type: \"checkbox\",\n        checked: done,\n        onChange: e => {\n          completeItem(id, e.target.checked);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: id,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"description\",\n          children: dateCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon icon-edit\",\n        onClick: onEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon icon-destroy\",\n        onClick: deleteItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitEdit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit\",\n        type: \"text\",\n        value: value,\n        onChange: e => setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(Task, \"Ym6Ak1VvuWwXg/Lw58WMwNsYCCQ=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["eachDayOfInterval","formatDistanceToNow","useState","Task","id","label","done","deleteItem","completeItem","upDateEdit","value","setValue","edit","setEdit","onEdit","console","log","dateCreated","Date","includeSeconds","addSuffix","liClass","e","target","checked","onSubmitEdit"],"sources":["/home/vaseliy/Рабочий стол/ReactApps/todoApp1/src/components/task/task.js"],"sourcesContent":["import { eachDayOfInterval, formatDistanceToNow } from 'date-fns';\nimport { useState } from 'react';\n// import { Component } from 'react';\n// import Timer from '../timer/timer';\n\n// export default class Task extends Component {\n//   constructor(props) {\n//     super()\n//     this.state = {\n//       label: '',\n//       edit: false,\n//     }\n//   }\n\n//   onEdited() {\n//     this.setState({\n//       edit: true,\n//       label: this.props.label,\n//     });\n//   };\n\n//   changeLabel(event) {\n//     this.setState({\n//       label: event.target.value,\n//     });\n//   };\n\n//   onSubmitEdit(event) {\n//     event.preventDefault();\n//     const { updateEdit, id } = this.props;\n//     const text = this.state.label;\n//     updateEdit(id, text);\n//     this.setState({\n//       label: '',\n//       edit: false,\n//     });\n//   };\n  \n//   render() {\n//     const { label, done, id, date, onDeleted, onCompleted } = this.props;\n//     let dateCreated = formatDistanceToNow(date, { includeSeconds: true, addSuffix: true });\n//     let liClass = '';\n//     if (done) {\n//       liClass += ' completed';\n//     }\n//     if (this.state.edit) liClass += ' editing';\n\n//     return (\n//       <li className={liClass}>\n//         <div className=\"view\">\n//           <input\n//             id={id}\n//             className=\"toggle\"\n//             type=\"checkbox\"\n//             checked={done}\n//             onChange={(event) => {\n//               onCompleted(id, event.target.checked);\n//             }}\n//           ></input>\n//           <label htmlFor={id}>\n//             <span className=\"title\">{label}</span>\n//             <span className=\"description\">\n//                 <Timer initialTime={this.props.timer} done={done}/>\n//             </span>\n//             <span className=\"description\">{dateCreated}</span>\n//           </label>\n//           <button className=\"icon icon-edit\" onClick={this.onEdited}></button>\n//           <button className=\"icon icon-destroy\" onClick={onDelItem(id)}></button>\n//         </div>\n//         <form onSubmit={this.onSubmitEdit}>\n//           <input\n//             className=\"edit\"\n//             type=\"text\"\n//             value={this.state.label}\n//             onChange={(event) => this.changeLabel(event)}\n//           ></input>\n//         </form>\n//       </li>\n//     );\n//   }\n// }\n\nconst Task = ({id, label, done, deleteItem, completeItem, upDateEdit}) => {\n  const [value, setValue] = useState('')\n  const [edit, setEdit] = useState(false)\n\n  const onEdit = () => {\n    console.log(label)\n    setValue(label)\n    setEdit(true)\n  }\n\n  // const onSubmitEdit = (e) => {\n  //   e.prevent.default()\n  //   upDateEdit(id, value)\n  //   setValue('')\n  //   setEdit(false)\n  // }\n\n  const dateCreated = formatDistanceToNow(new Date(), { includeSeconds: true, addSuffix: true })\n  let liClass = ' '\n  if (done) liClass += ' completed'\n  if (edit) liClass += ' editing'\n\n  return (\n    <li className={liClass}>      \n          <div className=\"view\">\n            <input\n             id={id}\n             className=\"toggle\"\n             type=\"checkbox\"\n             checked={done}\n             onChange={(e) => {\n               completeItem(id, e.target.checked);\n             }}\n           ></input>\n           <label htmlFor={id}>\n             <span className=\"title\">{label}</span>\n            <span className=\"description\">\n                 {/* <Timer initialTime={this.props.timer} done={done}/> */}\n             </span>\n             <span className=\"description\">{dateCreated}</span>\n           </label>\n           <button className=\"icon icon-edit\" onClick={onEdit}></button>\n           <button className=\"icon icon-destroy\" onClick={deleteItem}></button>\n         </div>\n         <form onSubmit={onSubmitEdit}>\n           <input\n             className=\"edit\"\n             type=\"text\"\n             value={value}\n             onChange={(e) => setValue(e.target.value)}\n           ></input>\n         </form>\n       </li>\n  )\n}\n\nexport default Task"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}